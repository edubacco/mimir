{{- with .Values.proxy }}
{{- if .enabled }}
{{- $isGEMGateway := $.Values.enterprise.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mimir.resourceName" (dict "ctx" $ "component" "proxy") }}
  labels:
    {{- include "mimir.labels" (dict "ctx" $ "component" "proxy") | nindent 4 }}
  annotations:
    {{- toYaml .annotations | nindent 4 }}
  namespace: {{ $.Release.Namespace | quote }}
spec:
{{- if not .autoscaling.enabled }}
  replicas: {{ .replicas }}
{{- end }}
{{- with .strategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
  selector:
    matchLabels:
      {{- include "mimir.selectorLabels" (dict "ctx" $ "component" "proxy") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mimir.podLabels" (dict "ctx" $ "component" "proxy") | nindent 8 }}
      annotations:
        {{- $annotations := include "mimir.podAnnotations" (dict "ctx" $ "component" "proxy") | fromYaml -}}
        {{- if $isGEMGateway -}}
        {{- $annotations = (dict "checksum/config" (include (print $.Template.BasePath "/proxy/nginx-configmap.yaml") $ | sha256sum )) | merge $annotations -}}
        {{- end -}}
        {{- $annotations | toYaml | nindent 8 }}
      namespace: {{ $.Release.Namespace | quote }}
    spec:
      serviceAccountName: {{ include "mimir.serviceAccountName" $ }}
      {{- if .priorityClassName }}
      priorityClassName: {{ .priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .securityContext | nindent 8 }}
      initContainers:
        {{- toYaml .initContainers | nindent 8 }}
      {{- if $.Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range $.Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        {{- if $isGEMGateway }}
        - name: gateway
          image: {{ include "mimir.imageReference" $ | quote }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          args:
            - "-target=gateway"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
            {{- range $key, $value := .extraArgs }}
            - "-{{ $key }}={{ $value }}"
            {{- end }}
          volumeMounts:
            {{- with .extraVolumeMounts }}
              {{ toYaml . | nindent 12}}
            {{- end }}
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/{{ include "mimir.name" $ }}
            - name: license
              mountPath: /license
            - name: tmp
              mountPath: /data
        {{- else }}
        - name: nginx
          image: {{ .nginx.image.registry }}/{{ .nginx.image.repository }}:{{ .nginx.image.tag }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          args:
          {{- with .extraArgs }}
            {{- range $key, $value := . }}
            - "-{{ $key }} {{ $value }}"
            {{- end }}
          {{- end }}
          volumeMounts:
            {{- if .extraVolumeMounts }}
            {{ toYaml .extraVolumeMounts | nindent 12 }}
            {{- end }}
            - name: nginx-config
              mountPath: /etc/nginx
            {{- if .nginx.basicAuth.enabled }}
            - name: auth
              mountPath: /etc/nginx/secrets
            {{- end }}
            - name: tmp
              mountPath: /tmp
            - name: docker-entrypoint-d-override
              mountPath: /docker-entrypoint.d
          {{- end }}
          ports:
            - name: http-metrics
              containerPort: {{ include "mimir.serverHttpListenPort" $ }}
              protocol: TCP
          readinessProbe:
            {{- toYaml .readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          securityContext:
            {{- toYaml .containerSecurityContext | nindent 12 }}
          env:
            {{- with $.Values.global.extraEnv }}
              {{ toYaml . | nindent 12 }}
            {{- end }}
            {{- with .env }}
              {{ toYaml . | nindent 12 }}
            {{- end }}
          envFrom:
            {{- with $.Values.global.extraEnvFrom }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with .extraEnvFrom }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .extraContainers }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      nodeSelector:
        {{- toYaml .nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      topologySpreadConstraints:
        {{- include "mimir.lib.topologySpreadConstraints" (dict "ctx" $ "component" "proxy") | nindent 8 }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
      volumes:
        - name: config
          {{- include "mimir.configVolume" $ | nindent 10 }}
        - name: runtime-config
          configMap:
            name: {{ include "mimir.fullname" $ }}-runtime
        - name: nginx-config
          configMap:
            name: {{ include "mimir.fullname" $ }}-proxy-nginx
        {{- if .nginx.basicAuth.enabled }}
        - name: auth
          secret:
            secretName: {{ include "mimir.proxy.nginx.authSecret" $ }}
        {{- end }}
        - name: tmp
          emptyDir: {}
        - name: docker-entrypoint-d-override
          emptyDir: {}
        {{- if $isGEMGateway }}
        - name: license
          secret:
            secretName: {{ tpl $.Values.license.secretName $ }}
        {{- end -}}
        {{- if .extraVolumes }}
        {{- toYaml .extraVolumes | nindent 8 }}
        {{- end }}
{{- end -}}
{{- end -}}
