{{- if and .Values.proxy.enabled .Values.proxy.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.proxy.ingress.nameOverride | default (include "mimir.resourceName" (dict "ctx" . "component" "proxy") ) }}
  labels:
    {{- include "mimir.labels" (dict "ctx" . "component" "proxy") | nindent 4 }}
  {{- with .Values.proxy.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  {{- with .Values.proxy.ingress.ingressClassName }}
  ingressClassName: {{ . }}
  {{- end -}}
  {{- with .Values.proxy.ingress.tls }}
  tls:
    {{- range . }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      {{- with .secretName }}
      secretName: {{ . }}
      {{- end }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.proxy.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ include "mimir.proxy.service.name" $ }}
                port:
                  number: {{ $.Values.proxy.service.port }}
          {{- end }}
    {{- end }}
{{- end -}}
