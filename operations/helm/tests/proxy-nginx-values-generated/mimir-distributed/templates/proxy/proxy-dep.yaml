---
# Source: mimir-distributed/templates/proxy/proxy-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-nginx-values-mimir-proxy
  labels:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: proxy-nginx-values
    app.kubernetes.io/component: proxy
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "citestns"
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: proxy-nginx-values
      app.kubernetes.io/component: proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: proxy-nginx-values
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: proxy
      annotations:
        checksum/config: 8760ed36ed353f003c825ddaf49409f01bfc9cc59e961ea604464f3ee3897f0b
      namespace: "citestns"
    spec:
      serviceAccountName: proxy-nginx-values-mimir
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
      initContainers:
        []
      containers:
        - name: nginx
          image: docker.io/nginxinc/nginx-unprivileged:1.22-alpine
          imagePullPolicy: IfNotPresent
          args:
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx
            - name: tmp
              mountPath: /tmp
            - name: docker-entrypoint-d-override
              mountPath: /docker-entrypoint.d
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http-metrics
            initialDelaySeconds: 15
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          envFrom:
      nodeSelector:
        {}
      affinity:
        {}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: mimir
              app.kubernetes.io/instance: proxy-nginx-values
              app.kubernetes.io/component: proxy
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: proxy-nginx-values-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: proxy-nginx-values-mimir-runtime
        - name: nginx-config
          configMap:
            name: proxy-nginx-values-mimir-proxy-nginx
        - name: tmp
          emptyDir: {}
        - name: docker-entrypoint-d-override
          emptyDir: {}
